<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="promotion">
	<insert id="insertPromotion">
		insert into
			promotion
		values(
			#{promotionCode},
			#{name},
			#{startDate},
			#{endDate},
			#{sideNote},
			#{isRegular},
			#{banner},
			#{viewCount},
			#{memberNo},
			default,
			#{nickname}
		)
	</insert>
	
	<update id="insertProductPromotion">
		<foreach collection="list" item="item" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
		into
			product_promotion
		values
		(#{item.productCode},#{item.promotionCode})
		</foreach>
	</update>
	
	<select id="selectAllPromotionList" resultType="promotion">
		select
		    *
		from
			promotion
		order by
			enroll_date desc
	</select>
	
	<select id="selectCurrentPromotionList" resultType="promotion">
		select
			*
		from
			promotion
		where
			start_date <![CDATA[<= ]]> sysdate and end_date <![CDATA[> ]]> sysdate
		order by
			enroll_date desc
	</select>
	
	<select id="selectEndpromotionList" resultType="promotion">
		select
		    *
		from
		    promotion
		where
		    end_date <![CDATA[<]]> sysdate
		order by
			enroll_date desc
	</select>
	
	<select id="selectPromotionByPromotionCode" resultMap="promotionCollection">
		select
		    *
		from
			view_product_promotion
		where
			promotion_code = #{promotionCode}
	</select>
	<resultMap type="promotion" id="promotionCollection">
		<id column="promotion_code" property="promotionCode"/>
		<result column="name" property="name"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="side_note" property="sideNote"/>
		<result column="is_regular" property="isRegular"/>
		<result column="banner" property="banner"/>
		<result column="view_count" property="viewCount"/>
		<result column="memberNo" property="memberNo"/>
		<result column="nickname" property="nickname"/>
		<result column="enroll_date" property="enrollDate"/>
		<collection property="productList" ofType="product">
			<id column="product_code" property="productCode"/>
			<result column="product_name" property="name"/>
			<result column="price" property="price"/>
			<result column="thumbnail" property="thumbnail"/>
			<result column="status" property="status"/>
		</collection>
	</resultMap>
	
	<update id="updatePromotion">
	update promotion set
		name = #{name},
		start_date = #{startDate},
		end_date = #{endDate},
		side_note = #{sideNote},
		is_regular = #{isRegular},
		banner = #{banner}
	where
		promotion_code = #{promotionCode}
	</update>
	
	<delete id="deleteProductPromotion">
	delete from product_promotion
	<where>
		<foreach collection="list" item="item" open="(" close=")" separator="or">
			product_code = #{item.productCode} and promotion_code = #{item.promotionCode}
		</foreach>
	</where>
	</delete>
	
	<delete id="deletePromotion">
		delete from promotion
	<where>
		<foreach collection="array" item="item" open="(" close=")" separator="or">
			promotion_code = #{item}
		</foreach>
	</where>
	</delete>
	
	<select id="selectProductListByPromotionCode" resultType="product">
		select
		    p.product_code,
		    p.thumbnail,
		    p.name,
		    p.status,
		    p.reg_date,
		    p.view_count,
		    p.price
		from
		    product p left join product_category pc
		        on p.product_code = pc.product_code
		<where>
		    p.product_code  in (select product_code from product_promotion where promotion_code = #{promotionCode})
		    <if test="childCategoryCode != null">
		     and pc.child_category_code in
				<foreach collection="childCategoryCode" open="(" item="code" separator="," close=")">
					#{code}
				</foreach>
		    </if>
		</where>
	    <if test="keyword != null">
	    	<choose>
	    		<!-- <when test="keyword eq recommend">
	    			order by 
	    		</when> -->
	    		<when test="keyword eq 'new'">
	    			order by reg_date desc
	    		</when>
<!-- 	    		<when test="keyword eq sell">
	    			order by 
	    		</when>
	    		<when test="keyword eq promotion">
	    			order by 
	    		</when> -->
	    		<when test="keyword eq 'row'">
	    			order by p.price
	    		</when>
	    		<when test="keyword eq 'high'">
	    			order by p.price desc
	    		</when>
	    	</choose>
	    </if>
	</select>
	
	<select id="selectProductPromotionByPromotionCode" resultType="map">
		select
		    distinct (select child_category_title from product_child_category cc where pc.child_category_code = cc.child_category_code) child_category_title,
		    child_category_code
		from
		    product_category pc
		where
		    pc.product_code in (select product_code from product_promotion where promotion_code = #{promotionCode})
	</select>
</mapper>